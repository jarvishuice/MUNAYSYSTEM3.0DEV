from core.Entities.reports.client.clientReporteEntity import *
from abc import ABC,abstractmethod

class IReportClient(ABC):
    
    def __init__(self) -> None:
        super().__init__()
    @abstractmethod
    def __getOrdenesAbiertasCoffe(self, sede:str,idCliente:int): ...
    @abstractmethod
    def __getOrdenesCerradasCoffe(self, sede:str,idCliente):...
    @abstractmethod
    def __getPagosCoffe(self,sede:str,idCliente):...
  
    @abstractmethod
    def __getWalletOperacionesCoffe(self,sede:str,idCliente):...
    @abstractmethod
    def __getPedidosCoffe(self,sede:str,idCliente):...
    @abstractmethod
    def __getOrdenesAbiertasEspacios(self,sede:str,idCliente):...
    @abstractmethod
    def __getOrdenesCerradasEspacios(self,sede:str,idCliente):...
    @abstractmethod
    def __getPagosEspacios(self,sede:str,idCliente):...
    @abstractmethod
    def __getWalletOperacionesEspacios(self,sede:str,idCliente):...
    @abstractmethod
    def __getPedidosEspacios(self,sede:str,idCliente):...
    @abstractmethod 
    def generarReporteClientUnificado(self,sede:str,idCliente:int):... 
    @abstractmethod
    def generarReporteClientCoffe(self,sede:str,idCliente:int):... 
    @abstractmethod
    def generarReporteClientEspacio(self,sede:str,idCliente:int):...  
    @abstractmethod
    def generarReporteClientUnificadoHTML(self,sede:str,idCliente:int): ...
    @abstractmethod
    def generarReporteClientCoffeHTML(self,sede:str,idCliente:int): ...
    @abstractmethod
    def generarReporteClientEspacioHTML(self,sede:str,idCliente:int): ...